#pragma once

#cmakedefine XOLOTL_INCLUDE_RN_TPP_FILES

#cmakedefine XOLOTL_USE_64BIT_INDEX_TYPE

#cmakedefine XOLOTL_INTERFACE_REPORT_ERRORS

#define STRINGIFY(x) #x
#define TO_STRING(x) STRINGIFY(x)

// Ensure we have fixed-width integer type definitions in std namespace.
#include <cstdint>
#include <limits>

namespace xolotl
{
#if defined(XOLOTL_USE_64BIT_INDEX_TYPE)
// using IdType = std::int64_t;
using IdType = std::uint64_t;
#else
// using IdType = std::int32_t;
using IdType = std::uint32_t;
#endif
using AmountType = std::uint32_t;

namespace detail
{
template <typename T, typename Enable = void>
struct BadId : std::integral_constant<T, std::numeric_limits<T>::max()>
{
};

template <typename T>
struct BadId<T, std::enable_if_t<std::is_signed_v<T>>> :
	std::integral_constant<T, -1>
{
};
} // namespace detail

inline constexpr auto badId = detail::BadId<IdType>();
} // namespace xolotl
